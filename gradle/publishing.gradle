/*
 * Copyright 2022 Grabtaxi Holdings PTE LTD (GRAB)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: "org.jetbrains.dokka"

task sourcesJar(type: Jar) {
    group = "publishing"
    archiveClassifier.set("sources")
    from sourceSets.main.java.srcDirs
    from sourceSets.main.kotlin.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    group = "publishing"
    archiveClassifier.set("javadoc")
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def configurePom = { MavenPublication publication ->
    publication.pom {
        name = project.name
        description = project.description
        url = 'https://github.com/grab/app-sizer'
        licenses {
            license {
                name = "The MIT License"
                url = "https://github.com/grab/App-Sizer/blob/master/LICENSE"
            }
        }
        developers {
            developer {
                id = 'MinhNguyen-nvm'
                name = "Minh Nguyen"
                email = 'van.minh@grab.com'
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
            developer {
                id = "arunkumar9t2"
                name = "Arunkumar"
                email = "hi@arunkumar.dev"
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
            developer {
                id = "minkuan88"
                name = "Min Kuan Lim"
                email = "minkuan88@hotmail.com"
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
            developer {
                id = "mohammadkahelghi-grabtaxi"
                name = "Mohammad Khaleghi"
                email = "mohammad.khaleghi@grabtaxi.com"
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
            developer {
                id = "stevenchao-grabtaxi"
                name = "Steven Chao"
                email = "steven.chao@grabtaxi.com"
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
            developer {
                id = "arnav-grabtaxi"
                name = "Arnav Jain"
                email = "arnav.jain@grabtaxi.com"
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
            developer {
                id = "adarsh-grabtaxi"
                name = "Adarsh Srivastava"
                email = "adarsh.srivastava@grabtaxi.com"
                organization = 'Grab'
                organizationUrl = 'https://github.com/grab'
            }
        }
        scm {
            connection = 'scm:git:git://github.com/grab/app-sizer.git'
            developerConnection = 'scm:git:ssh://github.com:grab/app-sizer.git'
            url = 'https://github.com/grab/app-sizer'
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            try {
                named("appSizerPluginPluginMarkerMaven") { publication ->
                    configurePom(publication)
                }
            } catch (UnknownDomainObjectException ignored) {
            }
            release(MavenPublication) { publication ->
                groupId project.findProperty("groupId")
                artifactId project.name
                version project.findProperty("versionName")

                from components.java

                artifact sourcesJar
                artifact javadocJar

                configurePom(publication)
            }
        }
    }
}


afterEvaluate {
    signing {
        useInMemoryPgpKeys(
                rootProject.ext["signing.keyId"].toString(),
                rootProject.ext["signing.key"].toString(),
                rootProject.ext["signing.password"].toString(),
        )
        sign publishing.publications
    }
}
