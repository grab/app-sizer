name: Release App Sizer

on:
  release:
    types: [ created ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  TERM: dumb

jobs:
  release-cli:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build CLI JAR
        run: ./gradlew cli:shadowJar

      - name: Rename and prepare assets
        run: |
          cd ./cli/build/libs
          mv cli-app-sizer.jar app-sizer-cli-${{ env.VERSION }}.jar
          sha256sum app-sizer-cli-${{ env.VERSION }}.jar > app-sizer-cli-${{ env.VERSION }}.jar.sha256

      - name: Upload CLI JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cli/build/libs/app-sizer-cli-${{ env.VERSION }}.jar
          asset_name: app-sizer-cli-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Upload checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cli/build/libs/app-sizer-cli-${{ env.VERSION }}.jar.sha256
          asset_name: app-sizer-cli-${{ env.VERSION }}.jar.sha256
          asset_content_type: text/plain

#  release-plugin:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v4
#        with:
#          distribution: "zulu"
#          java-version: "11"
#          cache: 'gradle'
#
#      - name: Get version
#        id: get_version
#        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
#
#      - name: Import GPG key
#        uses: crazy-max/ghaction-import-gpg@v5
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.GPG_PASSPHRASE }}
#
#      - name: Validate Gradle wrapper
#        uses: gradle/wrapper-validation-action@v1
#
#      - name: Publish to Maven Central
#        env:
#          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
#          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
#          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#          VERSION: ${{ env.VERSION }}
#        run: |
#          ./gradlew :gradle-plugin:publish \
#            -Pversion=${VERSION} \
#            --no-daemon \
#            --no-parallel \
#            --stacktrace