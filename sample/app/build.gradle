/*
 * MIT License
 *
 * Copyright (c) 2024.  Grabtaxi Holdings Pte Ltd (GRAB), All rights reserved.
 *
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE
 */

plugins {
    id 'com.sample.android.application'
}

android {
    namespace 'com.grab.android.sample'
    defaultConfig {
        applicationId "com.grab.android.sample"
        archivesBaseName = "sample-bundle-file"
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        release {
            // You need to specify these in your local.properties file or
            // as environment variables
            storeFile file("$rootProject.projectDir/buildsystem/sample-release.keystore")
            storePassword '12345678'
            keyAlias 'key0'
            keyPassword '12345678'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }


    flavorDimensions += "version"
    productFlavors {
        // flavor for production
        pro {
            dimension = "version"
            applicationIdSuffix = ".pro"
            versionNameSuffix = "-pro"
        }
        // flavor for early access
        gea {
            dimension "service"
            applicationIdSuffix = ".gea"
            versionNameSuffix = "-gea"
        }
    }
}


dependencies {
    implementation project(":android-module-level1")
    implementation project(":kotlin-module")
    implementation project(":kotlin-multiplatform-module")
    implementation libs.androidx.appcompat
    implementation libs.androidx.navigation.ktx
    implementation libs.androidx.navigation.fragment.ktx
    testImplementation libs.junit
}

apply plugin: "com.grab.sizer"

appSizer {
    enabled = true
    projectInput {
        apk {
            bundleToolFile = file("${rootProject.rootDir}/binary/bundletool-all-1.15.4.jar")
            deviceSpecs = [
                    file("${rootProject.rootDir}/app-size-config/device-1.json"),
                    file("${rootProject.rootDir}/app-size-config/device-2.json")
            ]
        }
        variantFilter { variant ->
            variant.setIgnore(variant.flavors.contains("gea"))
        }
        enableMatchDebugVariant = true
        largeFileThreshold = 10
        teamMappingFile = file("${rootProject.rootDir}/module-owner.yml")
    }
    metrics {
        /** Enable this block if you have an InfluxDb locally **/
        /**
        influxDB {
            dbName = "sizer"
            reportTableName = "app_size"
            url = "http://localhost:8086"
            username = "root"
            password = "root"
            retentionPolicy {
                name = "app_sizer"
                duration = "360d"
                shardDuration = "0m"
                replicationFactor = 2
                setAsDefault = true
            }
        }
        **/
        customAttributes.putAll(
                ["pipeline_id": "1001"]
        )
    }
}